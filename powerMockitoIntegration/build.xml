<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<!--
	Below project name properties need to be modified as per project specific details
-->
<project basedir="." name="PowerMockito">
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<property name="PROP.dir" location="CONFIG-UAT" />
	<property name="PROP.FILE" value="properties/xml files" />
	<property name="DIST.JAR.FILE" value="dist/XXXXservices.jar" />
	<property name="test.dir" value="com/xxxx/**/mock/**/*.java" />
	<property name="junit.test.report.dir" location="JUnitTestReport" />
	<property name="junit.test.dir" location="test" />

	
	<path id="libs.classpath">
			<pathelement location="bin"/>
			<pathelement location="lib/hamcrest-core-1.3.jar"/>
			<pathelement location="lib/javassist-3.19.0-GA.jar"/>
			<pathelement location="lib/junit-4.11.jar"/>
			<pathelement location="lib/mockito-all-1.10.19.jar"/>
			<pathelement location="lib/mockito-core-2.0.5-beta.jar"/>
			<pathelement location="lib/objenesis-2.1.jar"/>
			 <pathelement location="lib/powermock-api-support-1.6.2.jar"/>
			 <pathelement location="lib/powermock-core-1.6.2.jar"/>
			 <pathelement location="lib/powermock-module-junit4-1.6.2.jar"/>
			 <pathelement location="lib/powermock-module-junit4-common-1.6.2.jar"/>
			 <pathelement location="lib/powermock-reflect-1.6.2.jar"/>
			<pathelement location="lib/powermock-api-mockito-1.6.2.jar"/>
	</path>
	<path id="build.classes">
		<pathelement location="build/classes" />
	</path>
	<path id="build.junit">
		<pathelement location="junit-test" />
	</path>
	<target name="init" depends="clean">
		<mkdir dir="build/classes" />
		<mkdir dir="dist" />
		<mkdir dir="junit-test" />
		<mkdir dir="test-report" />
		<copy includeemptydirs="false" todir="build/classes">
			<fileset dir="src">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="build/classes" />
		<delete dir="junit-test" />
		<delete dir="dist" />
	</target>
	<target name="config-files" if="overwrite.yes" depends="init">
		<copy overwrite="true" includeemptydirs="false" todir="build/classes">
			<fileset dir="${PROP.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<echo message="${PROP.FILE} taken from ${PROP.dir} and overwritten" />
	</target>
	<target name="build" depends="init">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" source="${source}" target="${target}" executable="${javac1.8}" excludes="${test.dir}">
			<src path="src" />
			<classpath refid="libs.classpath" />
		</javac>
	</target>

	<target name="compile-junit">
		<javac debug="true"  debuglevel="${debuglevel}" destdir="junit-test" source="${source}" target="${target}" executable="${javac1.8}">
			<src path="test" />
			<classpath refid="libs.classpath" />
			<classpath refid="build.classes" />
		</javac>
	</target>
	<!--showoutput="true"-->
	<target name="run-junit" depends="compile-junit">
		<echo message="${ant.project.name} : Junit Task Execution" />
		<junit printsummary="on" showoutput="true" fork="true" haltonfailure="yes">
			<classpath refid="libs.classpath" />
			<classpath refid="build.classes" />
			<classpath refid="build.junit" />
			<formatter type="xml" />
			<batchtest todir="./test-report">
				<fileset dir="test">
					<include name="**/*Test*.java" />
					<include name="**/*Example*.java" />
					<exclude name="**/*Case*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<junitreport todir="test-report">
		<fileset dir="test-report">
			<include name="TEST*" />
		</fileset>
		<report format="frames" todir="./report/html/" />
	</junitreport>
	
	<target name="compress" depends="build,compile-junit,run-junit">
	</target>
</project>
